This is a 3DS homebrew audio/video playback server, listening on TCP port 8334. This uses ctrulib.

Compiling:
make MEDIAMODE=<val> CODEC=<val> HIDREPORT=<val>

MEDIAMODE must be either value 0 for video, or value 1 for audio.
CODEC must be either value 0 for raw video/audio, or value 1 for encoded video/audio.
HIDREPORT is optional, when the value is non-zero and MEDIAMODE is 0, the server will send a 0x10c-byte block to the client every >= ~1/60 of a second. The first 0x108-bytes are from hidSharedMem+0, the last word is from here: http://3dbrew.org/wiki/Configuration_Memory#3D_SLIDERSTATE

Besides ctrulib, the following libraries are required: libvpx, libvorbisfile, libvorbis, and libogg.
Configuring libvpx building: CROSS=arm-none-eabi- ./configure --target=generic-gnu "--extra-cflags=-march=armv6 -mtune=mpcore -mfpu=vfp" --disable-multithread --disable-vp8-encoder --disable-vp9-encoder
Configuring libogg building: ./configure --host=arm-none-eabi --prefix=/opt/devkitpro/devkitARM/portlibs/arm/armv6

The audio is 44100Hz pcm_s16le mono-channel, when CODEC is non-zero the data sent to the app must be .ogg.
When CODEC is non-zero, the video data sent to the app must be VP8 IVF.

Example terminal commands for streaming to this server:
Ogg streaming: avconv -i <inputfile> -f s16le -acodec libvorbis -ac 1 -vn -f ogg - | nc <serveraddr> 8334
Raw audio streaming: avconv -i <inputfile> -f s16le -acodec pcm_s16le -ac 1 - | nc <serveraddr> 8334

The VP8 video framerate from the client should be only ~20-25fps, this is due to single-threaded decoding(higher framerates can't be used due to this not decoding fast enough).

This app handles certain errors by triggering crashes. Note that this includes service initialization failure(such as CSND), like when the app doesn't have access to a required service.

This has various bugs, including:
1) Return-to-menu(which includes power-button handling) does not work, likely due to broken "non-blocking" sockets.
2) When a connection closes, the app will eventually call accept(). This then immediately returns an error(0xd8e07007) from SOC module, the app handles errors from accept() which aren't EWOULDBLOCK by triggering a crash.
3) Ogg handling is broken, this doesn't work very well compared to raw audio playback. Unlike raw audio playback, the app will quickly hang without crashing, when playing ogg audio.

Credits:
The yuv2rgb code used by this app is from here: http://wss.co.uk/pinknoise/yuv2rgb/

